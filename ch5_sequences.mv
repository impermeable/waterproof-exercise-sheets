# Sequences<hint title="üì¶ Import libraries (click to open/close)">
```coq
Set Default Goal Selector "!".

Require Import Coq.Reals.Reals.

Require Import Waterproof.Tactics.
Require Import Waterproof.Notations.Common.
Require Import Waterproof.Notations.Reals.
Require Import Waterproof.Notations.Sets.
Require Import Waterproof.Chains.
Require Import Waterproof.Automation.
Require Import Waterproof.Libs.Analysis.MetricSpaces.
Require Import Waterproof.Libs.Analysis.SequencesMetric.

Waterproof Enable Automation RealsAndIntegers.

Open Scope R_scope.
Open Scope metric_scope.

Notation "'max(' x , y )" := (Rmax x y)
  (format "'max(' x ,  y ')'").
Notation "'min(' x , y )" := (Rmin x y)
  (format "'min(' x ,  y ')'").

Inductive answer : Type :=
| Yes : answer.

Set Default Timeout 10.
```
</hint>Declaration of metric space $(X,\mathrm{dist})$ used in both exercises:
```coq
Context (X : Metric_Space).
Notation "'dist(' x , y )" := (dist X x y)
  (format "'dist(' x ,  y ')'").
```
<hint title="üí° Hint (click to open/close)">Recall how to use the five properties of `dist` from the exercises on metric spaces.</hint>## Exercise 5.9.1 (Proposition 5.4.1)

Before you start, two things to keep in mind.

‚ö†Ô∏è
To write $n ‚â• N_1$ for natural numbers $n, N_1$, you need to write
```(n ‚â• N1)%nat``` in Waterproof.
Similarly, if you need to pick a natural number $N_1$, use  ```Choose N1 := (..)%nat```.

‚ö†Ô∏è The variable names `N` and `N0` are already used in the code that defines the real numbers. You cannot use these names any more. Instead use a name like `N1`.
```coq
Section Prop_5_4_1.
```

```coq
Variable (p : X).
Definition a (n : ‚Ñï) := p.
```

```coq
Lemma exercise_5_9_1 : a _converges to_ p.
Proof.
```
<input-area>
```coq

```
</input-area>
```coq
Qed.
```

```coq
End Prop_5_4_1.
```
## Exercise 5.9.2 (Proposition 5.8.1)<hint title="üí° Hint">At some point you may need to help Waterproof with small steps, for instance rewriting explicitly as in:

```
It holds that (& dist(a(n), p) = dist(a((n-k) + k)%nat, p) = dist(a_shift(n - k)%nat, p)).
```
(Note that the above line only holds in a particular place in the proof, given certain choices made earlier).</hint>
```coq
Section Prop_5_8_1.

Variables (a : ‚Ñï ‚Üí X) (k : ‚Ñï) (p : X).

Definition a_shift (n : nat) := a (n + k)%nat.
```

```coq
Lemma exercise_5_9_2 :
  (a _converges to_ p) ‚áî (a_shift _converges to_ p).
```

```coq
Proof.
We show both directions.
- We need to show that
    (a _converges to_ p ‚áí a_shift _converges to_ p).
  Assume that (a converges to p) (i).
  By (i) it holds that
    (‚àÄ Œµ1 > 0, ‚àÉ N2 ‚àà ‚Ñï, ‚àÄ n ‚â• N2, dist(a(n), p) < Œµ1) (ii).
  We need to show that (‚àÄ Œµ > 0, ‚àÉ N1 ‚àà ‚Ñï,
    ‚àÄ n ‚â• N1, dist(a_shift(n), p) < Œµ).
  Take Œµ > 0.
  Use Œµ1 := Œµ in (ii).
  { Indeed, (Œµ > 0). }
  It holds that (‚àÉ N2 ‚àà ‚Ñï,
      ‚àÄ n ‚â• N2, dist(a(n), p) < Œµ).
  Obtain such an N2.
```
<input-area>
```coq

```
</input-area>
```coq
Qed.

End Prop_5_8_1.
```

## Declaration of own work

Please declare that the work above is your own work, by writing `Yes.` as an answer on the line below. In particular, this means that the proofs above are typed by yourself, and that you could give an explanation of the proof when asked.
```coq
Definition own_work : answer. exact
```
<input-area>
```coq

```
</input-area>
```coq
Qed.
```
