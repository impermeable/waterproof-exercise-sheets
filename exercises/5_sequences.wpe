{
  "exerciseSheet": true,
  "blocks": [
    {
      "type": "text",
      "text": "* Sequences\n\nThis file contains the blue exercises from the chapter \"Sequences\".\nTo run this file we have to import some libraries.\nYou can ignore these."
    },
    {
      "type": "code",
      "text": "Set Default Goal Selector \"!\".\nSet Default Timeout 5.\n\nRequire Import Reals.\n\nRequire Import Waterproof.definitions.set_definitions.\nRequire Import Waterproof.notations.notations.\nRequire Import Waterproof.AllTactics.\nRequire Import Waterproof.load_database.RealsAndIntegers.\nRequire Import Waterproof.set_search_depth.To_5.\nRequire Import Waterproof.theory.analysis.metric_spaces.\nRequire Import Waterproof.theory.analysis.sequences_metric.\n\nOpen Scope R_scope.\nOpen Scope metric_scope."
    },
    {
      "type": "text",
      "text": "\n## **Exercise 5.9.1. (Proposition 5.4.1.)**"
    },
    {
      "type": "code",
      "text": "Section Prop_5_4_1."
    },
    {
      "type": "text",
      "text": "\n***Proposition 5.4.1 (The constant sequence).*** *Let $(X,\\text{dist})$ be a metric space. Let $p ∈ X$ and assume that the sequence $(a_n)$ is given by $a_n = p$ for every $n ∈ ℕ$. We also say that $(a_n)$ is a constant sequence.\nThen $\\lim_{n \\to \\infty} a_n = p$.*\n"
    },
    {
      "type": "text",
      "text": "We declare the various mathematical objects in the exercise description as follows, don't worry about the syntax."
    },
    {
      "type": "code",
      "text": "Variable (X : Metric_Space) (p : X).\nNotation \"'dist(' x , y )\" := (dist X x y) (format \"'dist(' x ,  y ')'\").\nDefinition a (n : ℕ) := p."
    },
    {
      "type": "text",
      "text": "Note that also in WaterProof, a sequence is a function $ℕ \\to X$.\n"
    },
    {
      "type": "code",
      "text": "Check a.\n"
    },
    {
      "type": "text",
      "text": "The five properties that make $\\text{dist}$ into a metric are as follows:"
    },
    {
      "type": "code",
      "text": "Check (dist_positive X).\nCheck (dist_non_degenerate X).\nCheck (dist_symmetric X).\nCheck (dist_triangle_inequality X).\nCheck (dist_reflexive X)."
    },
    {
      "type": "text",
      "text": "\nThe task is to show that $\\lim_{n \\to \\infty} a_n = p$, or in other words, that $a$ converges to $p\\,$."
    },
    {
      "type": "code",
      "text": "\nLemma ex_5_9_1 : a _converges to_ p.\nProof."
    },
    {
      "type": "text",
      "text": "\nBefore you start, two things to keep in mind.\n\n**Remark:**\nTo write $n ≥ N_1$ for natural numbers $n, N_1$, you need to write\n```(n ≥ N1)%nat``` in Waterproof. \nSimilarly, if you need to pick a natural number $N_1$, use  ```Choose N1 := (..)%nat```.\n\n**Warning (!!!) :** The variable names `N` and `N0` are already used in the code that defines the real numbers. You cannot use these names any more. Instead use a name like `N1`.\n"
    },
    {
      "type": "input",
      "start": true,
      "id": "input-1"
    },
    {
      "type": "code",
      "text": "Admitted."
    },
    {
      "type": "input",
      "start": false,
      "id": "input-1"
    },
    {
      "type": "code",
      "text": "End Prop_5_4_1.\n"
    },
    {
      "type": "text",
      "text": "## **Exercise 5.9.2. (Proposition 5.8.1.)**\n"
    },
    {
      "type": "code",
      "text": "Section Prop_5_8_1."
    },
    {
      "type": "text",
      "text": "\n***Proposition 5.8.1 (Index shift).*** *Let $(X,\\text{dist})$ be a metric space and let $a : ℕ \\to X$ be a sequence in $X$. Let $k ∈ ℕ$ and $p ∈ X$.\nThen the sequence $(a_n)$ converges to $p$ if and only if the sequence $(a_{n+k})_n$ (i.e. the sequence $n \\mapsto a_{n + k}$) converges to $p$.*\n"
    },
    {
      "type": "text",
      "text": "We declare the various mathematical objects in the exercise description as follows, don't worry about the syntax."
    },
    {
      "type": "code",
      "text": "Variable (X : Metric_Space) (a : ℕ → X) (k : ℕ) (p : X).\nNotation \"'dist(' x , y )\" := (dist X x y) (format \"'dist(' x ,  y ')'\")."
    },
    {
      "type": "text",
      "text": "We denote the shifted sequence by `a_shift`.\n"
    },
    {
      "type": "code",
      "text": "Definition a_shift (n : nat) := a (n + k)%nat."
    },
    {
      "type": "text",
      "text": "\nThe task is now to prove Proposition 5.8.1."
    },
    {
      "type": "code",
      "text": "Lemma ex_5_9_2 : (a _converges to_ p) ⇔ (a_shift _converges to_ p).\nProof."
    },
    {
      "type": "text",
      "text": "We help you get started a little bit."
    },
    {
      "type": "code",
      "text": "We show both directions.\n\n- We need to show that (a converges to p ⇒ a_shift converges to p).\n  Assume that (a converges to p) (i).\n  We need to show that\n    (∀ ε : ℝ, ε > 0 ⇒ ∃ N1 : ℕ, ∀ n : ℕ, (n ≥ N1)%nat ⇒ \n      dist(a_shift(n),p) < ε).\n  Take ε : ℝ. Assume that (ε > 0).\n  By (i) it holds that \n    (∃ N2 : ℕ, ∀ n : ℕ, (n ≥ N2)%nat ⇒ dist(a(n),p) < ε) (ii)."
    },
    {
      "type": "text",
      "text": "\nBefore you continue, two things to keep in mind.\n\n**Warning (!!!) :** The variable names `N` and `N0` are already used in the code that defines the real numbers. You cannot use these names any more. Instead use a name like `N1`.\n\n**Remark:**\nIn the following proof you will have to choose specific values for `N1`.\nThe maximum function (for the natural numbers) is a bit tricky to deal with in Waterproof, but luckily it is not necessary for this proof.\nSo, try to choose a value **avoiding** the maximum function!"
    },
    {
      "type": "hint",
      "text": "Click to open hint.\n<hint>\nIn case a hypothesis `(i)` starts with 'there exists' such that some property holds, then you can use\n\n`Obtain` *name of variable* `according to (`*hypothesis label*`), so for ` *name of variable* `:` *type of variable* `it holds that (`*property of variable*`) (`*optional label*`).`\n\nFor instance, if there is a hypothesis `(i)` which says that \n`∃ r : ℝ, r > 0`,\nyou can use \n\n`Obtain r  according to (i), so for r : ℝ it holds that (r > 0) (ii).`\n\nThen, a variable `r` will be defined. Moreover, the property `r > 0` then holds for this specific `r`, and you can reference this property using `(ii)`."
    },
    {
      "type": "input",
      "start": true,
      "id": "input-2"
    },
    {
      "type": "code",
      "text": "Admitted."
    },
    {
      "type": "input",
      "start": false,
      "id": "input-2"
    },
    {
      "type": "code",
      "text": "End Prop_5_8_1."
    }
  ]
}