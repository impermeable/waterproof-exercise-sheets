# Limits and continuity<hint title="üì¶ Import libraries (click to open/close)">
```coq
Set Default Goal Selector "!".

Require Import Rbase.
Require Import Rbasic_fun.

Require Import Waterproof.Tactics.
Require Import Waterproof.Notations.Common.
Require Import Waterproof.Notations.Reals.
Require Import Waterproof.Notations.Sets.
Require Import Waterproof.Chains.
Require Import Waterproof.Automation.
Require Import Waterproof.Libs.Analysis.ContinuityDomainR.

Waterproof Enable Automation RealsAndIntegers.
Waterproof Enable Automation Intuition.

Open Scope R_scope.
Open Scope subset_scope.

Notation "'max(' x , y )" := (Rmax x y)
  (format "'max(' x ,  y ')'").
Notation "'min(' x , y )" := (Rmin x y)
  (format "'min(' x ,  y ')'").

Inductive answer : Type :=
| Yes : answer.

Set Default Timeout 20.
```
</hint>## Exercise 13.11.2
```coq
Definition f (x : ‚Ñù) := x.

Lemma exercise_13_11_2 : ‚àÄ a ‚àà ‚Ñù, f is _continuous_ in a.
Proof.
```
<hint title="üí° Hint (click to open/close)">To use the *$\varepsilon - \delta$ characterization* of continutiy in a point `a ‚àà ‚Ñù` , write

`It suffices to show that
  (‚àÄ Œµ > 0, ‚àÉ Œ¥ > 0, ‚àÄ x ‚àà ‚Ñù, 0 < |x - a| < Œ¥ ‚áí |x - a| < Œµ).`</hint><input-area>
```coq

```
</input-area>
```coq
Qed.
```

## Declaration of own work

Please declare that the work above is your own work, by writing `Yes.` as an answer on the line below. In particular, this means that the proofs above are typed by yourself, and that you could give an explanation of the proof when asked.
```coq
Definition own_work : answer. exact
```
<input-area>
```coq

```
</input-area>
```coq
Qed.
```
